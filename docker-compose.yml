version: "3"
name: "simple"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
  pgsql:
    image: "postgres:13"
    container_name: simple_pgsql
    ports:
      - "${PG_PORT:-5432}:5432"
    environment:
      PGPASSWORD: "${PG_PASSWORD:-secret}"
      POSTGRES_DB: "${PG_DB_NAME:-default}"
      POSTGRES_USER: "${PG_USER?:err}"
      POSTGRES_PASSWORD: "${PG_PASSWORD:-secret}"
    volumes:
      - "simplepgsql:/var/lib/postgresql/data"
    networks:
      - simple
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${PG_DB_NAME:-default}",
          "-U",
          "${PG_USER}",
        ]
      retries: 3
      timeout: 5s
  mailhog:
    image: "mailhog/mailhog:latest"
    container_name: simple_mailhog
    ports:
      - "${MAILHOG_PORT:-1025}:1025"
      - "${MAILHOG_DASHBOARD_PORT:-8025}:8025"
    networks:
      - simple
networks:
  simple:
    driver: bridge
volumes:
  simplepgsql:
